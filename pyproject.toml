[build-system]
requires = ["setuptools>=64.0.1", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "nexus3d"
dynamic = ["version"]
authors = [
    { name = "Florian Dobener", email = "florian.dobener@physik.hu-berlin.de" },
]
description = "Convert NXtransformation matrices inside a nexus file to 3D file formats"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "h5py>=3.8.0",
    "numpy",
    "pint",
    "numpy-stl",
    "click",
    "pygltflib",
    "xarray",
]

[project.urls]
homepage = "https://github.com/domna/nexus3d"
repository = "https://github.com/domna/nexus3d"
tracker = "https://github.com/domna/nexus3d/issues"
download = "https://github.com/domna/nexus3d/releases"

[project.optional-dependencies]
dev = [
    "mypy",
    "ruff==0.4.10",
    "pycodestyle",
    "pytest",
    "pytest-cov",
    "scipy",
]

[project.scripts]
nexus3d = "nexus3d.nexus_transformations:cli"

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"

[tool.setuptools]
packages = ["nexus3d"]

[tool.ruff]
include = ["src/*.py", "tests/*.py"]
exclude = ["src/pynxtools/definitions"]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
]
ignore = [
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402",  # Module level import not at top of file
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
ignore_missing_imports = true
follow_imports = "silent"
no_strict_optional = true
disable_error_code = "import, annotation-unchecked"
exclude = ["src/pynxtools/definitions/*"]